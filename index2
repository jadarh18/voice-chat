<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <title>Two-Way PeerJS Voice Chat</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/peerjs/1.5.4/peerjs.min.js"></script>
  <style>
    body, html { margin:0; padding:0; height:100%; display:flex; 
                  flex-direction:column; align-items:center; 
                  justify-content:center; font-family:sans-serif; }
    input, button { margin:8px; padding:10px; font-size:16px; }
  </style>
</head>
<body>
  <input id="myId"      placeholder="Your Peer ID" readonly/>
  <input id="otherId"   placeholder="Peer ID to call" />
  <button id="startCall">Call</button>

  <script>
    let peer, localStream;

    // 1) Grab mic as soon as you can:
    navigator.mediaDevices.getUserMedia({ audio: true })
      .then(stream => {
        localStream = stream;
        // (optional) play your own audio locally—but muted so you don't echo
        const me = new Audio();
        me.srcObject = stream;
        me.muted = true;
        me.play();
        // 2) Now that we have mic, create Peer:
        peer = new Peer( makeShortId(6), {
          host: '0.peerjs.com', port: 443, secure: true
        });
        peer.on('open', id => {
          document.getElementById('myId').value = id;
        });
        // 3) Answer incoming calls with that same stream
        peer.on('call', call => {
          call.answer(localStream);
          call.on('stream', playStream);
        });
      })
      .catch(err => alert('⚠️ Mic error: ' + err.message));

    // 4) When you click “Call”, use the same stream:
    document.getElementById('startCall').onclick = () => {
      const other = document.getElementById('otherId').value.trim();
      if (!peer || !localStream) return alert('Still setting up. Try again in a sec.');
      if (!other) return alert('Enter a Peer ID to call.');
      const call = peer.call(other, localStream);
      call.on('stream', playStream);
    };

    // Utility to play a received AudioStream
    function playStream(remoteStream) {
      const audio = new Audio();
      audio.srcObject = remoteStream;
      audio.play();
    }

    // Utility to make a 6-char ID
    function makeShortId(len=6) {
      const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
      let s = '';
      for (let i = 0; i < len; i++) {
        s += chars.charAt(Math.floor(Math.random()*chars.length));
      }
      return s;
    }
  </script>
</body>
</html>
